{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAqCeA,EAnCF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAkBtD,OACA,iCACE,uBAAOC,MAAOL,EAAWM,SAlBF,SAACC,GACtBN,EAAaM,EAAEC,OAAOH,QAiB6BI,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAfgB,SAACJ,GACvBA,EAAEK,iBACFT,EAAS,GAAD,mBACDD,GADC,CACM,CAACW,KAAMb,EAAWc,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAE3DhB,EAAa,KAUqBS,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQJ,SAXU,SAACC,GACnBH,EAAUG,EAAEC,OAAOH,QAUca,KAAK,QAAQR,UAAU,cAAxD,UACE,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCGKc,EA/BF,SAAC,GAAmC,IAAlCN,EAAiC,EAAjCA,KAAMO,EAA2B,EAA3BA,KAAMlB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAkB9B,OACI,sBAAKO,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAdQ,WACpBR,EAASD,EAAMmB,KAAI,SAACC,GAChB,OAAGA,EAAKP,KAAOK,EAAKL,GACT,2BACAO,GADP,IACaR,WAAYQ,EAAKR,YAG3BQ,OAO2BZ,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QArBM,WAClBR,EAASD,EAAMqB,QAAO,SAAAC,GAAE,OAAIA,EAAGT,KAAOK,EAAKL,QAoBPL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCZde,EAZE,SAAC,GAAsC,IAArCvB,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAAUuB,EAAmB,EAAnBA,cAChC,OACI,qBAAKhB,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKgB,EAAcL,KAAI,SAAAD,GAAI,OACnB,cAAC,EAAD,CAAOA,KAAMA,EAAMlB,MAAOA,EAAOC,SAAUA,EAAwBU,KAAMO,EAAKP,MAApBO,EAAKL,YCmEpEY,MAtEf,WAAe,MAGqBC,mBAAS,IAH9B,mBAGN5B,EAHM,KAGKC,EAHL,OAIa2B,mBAAS,IAJtB,mBAIN1B,EAJM,KAICC,EAJD,OAKeyB,mBAAS,OALxB,mBAKNC,EALM,KAKEzB,EALF,OAM6BwB,mBAAS,IANtC,mBAMNF,EANM,KAMSI,EANT,KASbC,qBAAU,WACRC,MACC,IAGHD,qBAAU,WACRE,IACAC,MACC,CAAChC,EAAO2B,IAGX,IAAMI,EAAgB,WACpB,OAAOJ,GACL,IAAK,YACHC,EAAiB5B,EAAMqB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHgB,EAAiB5B,EAAMqB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEgB,EAAiB5B,KAMjBgC,EAAiB,WACnBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUpC,KAG3C8B,EAAgB,WACpB,GAAqC,OAAlCG,aAAaI,QAAQ,SACtBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDpC,EAASqC,KAIb,OACE,sBAAK9B,UAAU,MAAf,UACE,iCACE,uDAGF,cAAC,EAAD,CACER,MAAOA,EACPC,SAAUA,EACVH,UAAWA,EACXC,aAAcA,EACdG,UAAWA,IAEb,cAAC,EAAD,CACAsB,cAAeA,EACfxB,MAAOA,EACPC,SAAUA,QCzDDuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2fbd1454.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value);\n    };\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos, {text: inputText, completed: false, id: Math.random() * 1000 }\n        ]);\n        setInputText(\"\");\n    }\n\n    const statusHandler = (e) => {\n        setStatus(e.target.value);\n    }\n\n    return (\n    <form>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n    );\n};\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n\n    //Events\n    const deleteHandler = () => {\n        setTodos(todos.filter(el => el.id !== todo.id));\n    }\n\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n        }))\n    }\n\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filteredTodos.map(todo => (\n                    <Todo  todo={todo} todos={todos} setTodos={setTodos} key={todo.id} text={todo.text}/>\n                ))}\n            </ul>\n        </div>\n    )\n};\n\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // RUN ONCE WHEN THE APP STARTS\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  // Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //Functions\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed': \n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted': \n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  // Save to Local\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Aafreen's Todo List</h1>\n      </header>\n\n      <Form \n        todos={todos} \n        setTodos={setTodos} \n        inputText={inputText} \n        setInputText={setInputText}\n        setStatus={setStatus} />\n\n      <TodoList \n      filteredTodos={filteredTodos} \n      todos={todos} \n      setTodos={setTodos} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}